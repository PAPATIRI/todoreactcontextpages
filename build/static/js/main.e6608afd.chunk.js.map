{"version":3,"sources":["context/TodoContext.js","components/TodoForm.js","components/TodoList.js","context/TodoTypes.js","context/TodoReducer.js","context/TodoState.js","App.js","reportWebVitals.js","index.js"],"names":["createContext","TodoForm","useContext","TodoContext","setTodoTitle","createTodo","title","className","onSubmit","e","preventDefault","alert","type","name","onChange","target","value","placeholder","TodoList","getTodos","todos","loading","deleteTodo","useEffect","map","todo","onClick","id","GET_TODOS","SET_TODO_TITLE","CLEAR_TODO_TITLE","CREATE_TODO","DELETE_TODO","state","payload","filter","TodoState","children","useReducer","TodoReducer","dispatch","a","fetch","json","toJSON","console","error","message","newTodo","completed","method","headers","body","JSON","stringify","Provider","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e6608afd.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport default createContext();\r\n","//bring the useContext to using context\r\nimport React, { useContext } from \"react\";\r\n//context\r\nimport TodoContext from \"../context/TodoContext\";\r\n\r\nconst TodoForm = () => {\r\n  const { setTodoTitle, createTodo, title } = useContext(TodoContext);\r\n\r\n  const onCreateTodo = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (title === \"\") {\r\n      alert(\"fill the form\");\r\n      return;\r\n    }\r\n    createTodo(title);\r\n  };\r\n\r\n  return (\r\n    <form\r\n      className=\"flex justify-center items-center mt-4\"\r\n      onSubmit={onCreateTodo}\r\n    >\r\n      <input\r\n        type=\"text\"\r\n        name=\"title\"\r\n        className=\"input\"\r\n        onChange={(e) => setTodoTitle(e.target.value)}\r\n        value={title}\r\n        placeholder=\"things u wanna do\"\r\n      />\r\n      <button type=\"submit\" className=\"btn\">\r\n        save\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TodoForm;\r\n","//bring the useContext to using context\r\nimport React, { useEffect, useContext } from \"react\";\r\n//context\r\nimport TodoContext from \"../context/TodoContext\";\r\n\r\nconst TodoList = () => {\r\n  const { getTodos, todos, loading, deleteTodo } = useContext(TodoContext);\r\n\r\n  useEffect(() => {\r\n    getTodos();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {!loading &&\r\n        todos &&\r\n        todos.map((todo) => (\r\n          <div className=\"flex flex-row justify-between items-center todo-item\">\r\n            <p>{todo.title}</p>\r\n            <span className=\"remove-todo\" onClick={() => deleteTodo(todo.id)}>\r\n              &times;\r\n            </span>\r\n          </div>\r\n        ))}\r\n    </>\r\n  );\r\n};\r\nexport default TodoList;\r\n","export const GET_TODOS = \"GET_TODOS\";\r\nexport const SET_TODO_TITLE = \"SET_TODO_TITLE\";\r\nexport const CLEAR_TODO_TITLE = \"CLEAR_TODO_TITLE\";\r\nexport const CREATE_TODO = \"CREATE_TODO\";\r\nexport const DELETE_TODO = \"DELETE_TODO\";\r\n","import {\r\n  SET_TODO_TITLE,\r\n  GET_TODOS,\r\n  CREATE_TODO,\r\n  DELETE_TODO,\r\n  CLEAR_TODO_TITLE,\r\n} from \"./TodoTypes\";\r\n\r\nexport default (state, { type, payload }) => {\r\n  switch (type) {\r\n    //get all todos\r\n    case GET_TODOS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        todos: payload,\r\n      };\r\n    //set todo title for form\r\n    case SET_TODO_TITLE:\r\n      return { ...state, title: payload };\r\n    //create a new todo\r\n    case CREATE_TODO:\r\n      return {\r\n        ...state,\r\n        todos: [payload, ...state.todos],\r\n      };\r\n    //clear todo title after create\r\n    case CLEAR_TODO_TITLE:\r\n      return {\r\n        ...state,\r\n        title: \"\",\r\n      };\r\n    //delete a todo\r\n    case DELETE_TODO:\r\n      return {\r\n        ...state,\r\n        todos: state.todos.filter((todo) => todo.id !== payload),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","//berisikan state\", fungsi\", dan beberapa nilai yang akan digunakan oleh si komponen nantinya\r\nimport React, { useReducer } from \"react\";\r\n//bring the context\r\nimport TodoContext from \"./TodoContext\";\r\n//bring the reducer\r\nimport TodoReducer from \"./TodoReducer\";\r\n//bring the types\r\nimport {\r\n  SET_TODO_TITLE,\r\n  GET_TODOS,\r\n  CREATE_TODO,\r\n  DELETE_TODO,\r\n  CLEAR_TODO_TITLE,\r\n} from \"./TodoTypes\";\r\n\r\nconst TodoState = ({ children }) => {\r\n  //define our state\r\n  const initialState = {\r\n    todos: [],\r\n    title: \"\",\r\n    loading: true,\r\n  };\r\n\r\n  //Dispatch the reducer\r\n  //this come from useReducer from react\r\n  const [state, dispatch] = useReducer(TodoReducer, initialState);\r\n\r\n  //set the title for the new todo\r\n  //this will change whenever user type in the form later\r\n  const setTodoTitle = (payload) => {\r\n    dispatch({ type: SET_TODO_TITLE, payload });\r\n  };\r\n\r\n  //get todos\r\n  const getTodos = async () => {\r\n    try {\r\n      const todos = await fetch(\r\n        \"https://jsonplaceholder.typicode.com/todos?_limit=5\"\r\n      );\r\n      const toJSON = await todos.json();\r\n\r\n      dispatch({ type: GET_TODOS, payload: toJSON });\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  //create todo\r\n  const createTodo = async (title) => {\r\n    const newTodo = {\r\n      title,\r\n      completed: false,\r\n    };\r\n\r\n    try {\r\n      const todo = await fetch(\"https://jsonplaceholder.typicode.com/todos\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(newTodo),\r\n      });\r\n\r\n      const toJSON = await todo.json();\r\n\r\n      dispatch({ type: CLEAR_TODO_TITLE });\r\n      dispatch({ type: CREATE_TODO, payload: toJSON });\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  //delete todo\r\n  const deleteTodo = async (id) => {\r\n    try {\r\n      await fetch(`https://jsonplaceholder.typicode.com/todos/${id}`, {\r\n        method: \"DELETE\",\r\n      });\r\n\r\n      dispatch({ type: DELETE_TODO, payload: id });\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  //destruc the states\r\n  const { todos, title, loading } = state;\r\n\r\n  //disini dimana kita menggunakan state dan fungsi utnuk berurusan dengan context\r\n  //context akan membungkus seluruh aplikasi kita dengan componen ini dan menerima children didalamnya\r\n  //apapun state atau fungsi harus diteruskan ke dalam value props di provider untuk menggunakannya\r\n  //! JIKA KAMU TIDAK MENERUSKAN STATE ATAU FUNGSI DI DALAM VALUE PROPS INI KAMU AKAN MENDAPATKAN ERROR\r\n\r\n  return (\r\n    <TodoContext.Provider\r\n      value={{\r\n        todos,\r\n        title,\r\n        loading,\r\n        getTodos,\r\n        setTodoTitle,\r\n        createTodo,\r\n        deleteTodo,\r\n      }}\r\n    >\r\n      {children}\r\n    </TodoContext.Provider>\r\n  );\r\n};\r\n\r\nexport default TodoState;\r\n\r\n// menambahkan fungsi maka dilakukan disini, dan JANGAN MEMBUAT FUNGSI YANG BERINTERAKSI DENGAN SERVER DI KOMPONEN\r\n","import React from \"react\";\nimport \"./style.css\";\nimport TodoForm from \"./components/TodoForm\";\nimport TodoList from \"./components/TodoList\";\n//state\nimport TodoState from \"./context/TodoState\";\n\nconst App = () => {\n  return (\n    <TodoState>\n      <div className=\"container flex flex-col mt-4\">\n        <h1 className=\"text-center\">Todo App with Context</h1>\n        {/* todo form */}\n        <TodoForm />\n        {/* todo list */}\n        <div className=\"flex flex-col mt-4\">\n          <TodoList />\n        </div>\n      </div>\n    </TodoState>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}